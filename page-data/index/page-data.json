{"componentChunkName":"component---src-pages-index-js","path":"/","result":{"data":{"site":{"siteMetadata":{"title":"Clean Dev","configs":{"countOfInitialPost":10}}},"allMarkdownRemark":{"edges":[{"node":{"excerpt":"예제를 사용하면서 미니 프로젝트를 진행해보았습니다. axios 사용한 JS CRUD 이며, Authorization : API에 접속하기 위해서는 access token을 API 서버에 제출해서 인증을 해야 합니다. 글을 정리중입니다. 예제 보면서 공부해보았던 예제 입니다. 글을 쓰는이유 데모페이지 예제입니다.","fields":{"slug":"/project/book(crud)/"},"frontmatter":{"date":"October 19, 2021","title":"My Faborite Books","category":"project","draft":false}}},{"node":{"excerpt":"정리안된부분 정리 Array.of 메서드 는 전달된 인수를 요소로 갖는배열 생성 Array.from 메서드 는 유사배열객체 ,이터러블 객체를 인수로 전달받아 배열로 변환하여 반환 Array.isArray메서드는 전달된 인수가 배열이면 true, 배열이아니면 false Array.entries 매서드는 배열의 각 인데스에 대한 K/V 새로운 객체 를 반환한…","fields":{"slug":"/JavaScript/array.prototype/"},"frontmatter":{"date":"October 06, 2021","title":"Array type별 (Method정리)","category":"javascript","draft":false}}},{"node":{"excerpt":"Test 파일 작성규칙  폴더에 들어있는 test 파일 들은 작성한다. 폴더에 들어있는 test 파일 의 이름은 로 파일 을 작성한다. Vue Test Utils(VTU) Vue.js환경에서 단위 테스트를 하기 위한 공식 라이브러리 작성한 코드가 제대로 동작하는지 확인할때 사용가능하다. test.js 테스트 코드작성 에서는\nVuetify 가 localVu…","fields":{"slug":"/Vue/jest/"},"frontmatter":{"date":"October 01, 2021","title":"Jest Testing (정리개선중 )","category":"Vue","draft":false}}},{"node":{"excerpt":"전개연산자 (Spread Operator) 나열형 자료추출 및 연결할때 사용한다. 두 객체를 병합할때는 중복된 키 값들을 마지막 사용한객 체의 값으로 덮어 쓴다. 전개 연산자로 할당하면 2차원 형태가 되지 않는다. Es5 에서 배열의 내용은 합쳐 새로운 배열을 만들기 위해 concat 메소드 를 활용 Es6 에서 concat 메소드를 사용하지않고 간결하고…","fields":{"slug":"/JavaScript/전개연산자/"},"frontmatter":{"date":"September 30, 2021","title":"전개연산자","category":"javascript","draft":false}}},{"node":{"excerpt":"Vuex 란 어플리케이션의 모든 컴포넌트들에 대한 중앙 집중식 저장소의 역할 및 관리 Vuex 는 vue.js 애플리케이션 에대한 상태관리패턴 + 라이브러리 Vuex 구조 Vuex는     4가지 형태로 관리가 되며,\n관리 포인트 ‘store’ 라고 불리며, 이 4가지 는 단방향 데이터 흐름   state Vue 컴포넌트 에서 data 불릴수 있으며  화…","fields":{"slug":"/Vue/Vuex/"},"frontmatter":{"date":"September 29, 2021","title":"Vuex (state,getters,Mutations,Actions)","category":"Vue","draft":false}}},{"node":{"excerpt":"1.동기식 과 비동기식 처리 1-1. 동기식 처리 코드가 작성된 순서대로 실행됩니다. 1-2.비동기식 처리\n코드가 작성된 순서와는 상관없이 지정된 순서에 의해 실행됩니다.\n비동기 처리 로는   등이 있습니다. callback 비동기 처리를 하기위한 하나의 패턴으로 콜백함수를사용한다. 전통적인 콜백패턴은 콜백 헬로 인해 가독성이 나쁘고 비동기 처리중\n발생한…","fields":{"slug":"/Vue/Async-Await/"},"frontmatter":{"date":"September 28, 2021","title":"동기 와 비동기 처리의 이해","category":"Vue","draft":false}}},{"node":{"excerpt":"1.Vue.js의 제일 기초적인 개념적인 내용입니다. 라이플사이클은 크게    로 나눌수가있습니다. 1.Create 인스턴스가 작성된후 동기적으로 호출된다.\n부모,자식 관계 컴포넌트가 렌더링 될때 mounted보다 먼저 호출되며 부모,자식순으로 실행한다.\nCreate 단계에서는 호출되는 라이플 사이클 훅은 와  가 있다. 1-1.beforeCreate 인…","fields":{"slug":"/Vue/라이프사이클/"},"frontmatter":{"date":"September 28, 2021","title":"Vue.js 2.0 라이프사이클","category":"Vue","draft":false}}},{"node":{"excerpt":"변수 선언방식은 총 3 가지 가 있습니다. var,let,const 차이점 5가지 1.중복선언 가능여부  2.재활당 가능여부  3.변수 스코프 유효범위  4.변수 호이스팅 방식  5.전역객체 프로퍼티 여부 1.중복선언 1.var:중복선언이 가능하다 . 2.const,let : 중복선언 불가능 2.재할당 2-1.var,let : 값의 재할당이’가능’한 변수…","fields":{"slug":"/JavaScript/variable.basic/"},"frontmatter":{"date":"September 28, 2021","title":"JavaScript 문법공부 (Const,let,var)","category":"javascript","draft":false}}},{"node":{"excerpt":"Vue.Js 란 웹 페이지 화면을 개발하기 위한 프론트엔드 프레임워크 기반이다. 컴포넌트 기반으로 SPA(Single Page Application)를 구축할 수 있게 해주는 프레임워크이다. SPA 란 한개의 페이지 로 이루어진 어플리케이션을 명칭한다. index.html (메인페이지)를 한개페이지를 보여주기위한 예제입니다. 1-1.Hash Mode Vs…","fields":{"slug":"/Vue/vue.js-란/"},"frontmatter":{"date":"September 27, 2021","title":"Vue Basic(SPA 와  History mode 와 Hash mode)","category":"Vue","draft":false}}}]}},"pageContext":{}},"staticQueryHashes":["2486386679","3128451518"]}