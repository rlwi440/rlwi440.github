{"componentChunkName":"component---src-pages-index-js","path":"/","result":{"data":{"site":{"siteMetadata":{"title":"Clean Dev","configs":{"countOfInitialPost":10}}},"allMarkdownRemark":{"edges":[{"node":{"excerpt":"은 클라이언트 와 서버 간의 HTTP 통신을 위한 텍스트 데이터 포맷 JSON.stringfy (클라이언트 ➡️ 서버 ) 객체를 JSON 포맷의 문자열로 변환한다. 클라이언트 가 서버로 객체를 전송하려면,\n객체를 문자열화 해야하는데 이를  라고 표현한다. JSON.parse(서버 ➡️ 클라이언트) JSON 포맷의 문자열을 객체 변환한다. 서버로부터 클라이언트…","fields":{"slug":"/JavaScript/json/"},"frontmatter":{"date":"November 11, 2021","title":"JSON","category":"javascript","draft":false}}},{"node":{"excerpt":"Rest API 란?! ,, 3가지 구성요소가 있다. 란, REpresentational State Transfer 의 약자이다. 여기에 ~ful 이라는 형용사형 어미를 붙여 ~한 API 라는 표현으로 사용된다. 즉, REST 의 기본 원칙을 성실히 지킨 서비스 디자인은 ‘RESTful’하다라고 표현할 수 있다. 가 디자인 패턴이다, 아키텍처다 많은 이야…","fields":{"slug":"/JavaScript/Rest_Api/"},"frontmatter":{"date":"November 11, 2021","title":"RestApi","category":"javascript","draft":false}}},{"node":{"excerpt":"심벌값은  함수는 ES6에서 도입된 7번째 데이터 타입 으로 변경 불가능한 원시타입의 값 이다 .  메서드는 인수로 전달받은 문자열을 키로 사용 하여 키와 심벌 값의 쌍들이\n저장되어 있는 전역 심벌 레지스토리 에서 해당 키와 일치하는 심벌 값을 검색한다.","fields":{"slug":"/JavaScript/symbol/"},"frontmatter":{"date":"November 11, 2021","title":"Symbol","category":"javascript","draft":false}}},{"node":{"excerpt":"2021.11.01 ~ 2021.11.11 (10일 동안) 모던 자바스크립트 눈으로 흘리는것이 아닌\n제대로 필기하면서 부족했던 부분들을 채우니 자바스크립트 의 개념을 채운다는식으로 보면서 필기 및 공부를 해보았습니다. map 방식을 사용한 예제 및 공부 했던 예제 입니다.  2개의 행렬 arr1과 arr2를 입력받아, 행렬 덧셈의 결과를 반환하는 함수 예…","fields":{"slug":"/TIL/2021.11.11/"},"frontmatter":{"date":"November 11, 2021","title":"2021.11.11","category":"TIL","draft":false}}},{"node":{"excerpt":"TIL(Today I Learned) 기록 2021.11.03 reduce 라는 함수는 ES6 문법에서 는 자신을 호출한 모든요소를 순회 하며 ,인수로 전달받은 콜백함수를 호출함 . 는 오늘 공부 하면서 스스로 풀어보았습니다.  스택에 데이터를 밀어 넣는것  ,스택에서 데이터를 꺼내것을  입니다  는 선입선출 (First In Frits Out) 큐에 데…","fields":{"slug":"/TIL/2021.11.03/"},"frontmatter":{"date":"November 03, 2021","title":"2021.11.03","category":"TIL","draft":false}}},{"node":{"excerpt":"TIL(Today I Learned) 기록 오늘의 공부를 했던  을 TIL을 업로드를 하며 올릴예정입니다.\n커밋을 사용하기위한 목적이아닌 프로그래머스 코딩연습문제를 풀면서\n자바스크립트 문제를 조금더 효율적으로 사용하기 위함입니다. 최대공약수 와 최소공배수 재귀함수 호출 및 조금 활용적으로 사용할수 있게되었다. 로또의 최고순위 와 최저순위","fields":{"slug":"/TIL/2021.11.01/"},"frontmatter":{"date":"November 02, 2021","title":"2021.11.01","category":"TIL","draft":false}}},{"node":{"excerpt":"handlebars handelbar 를 HTML로 컴파일 이가능하다. 2.문법이 깔끔하다 3.확장자(.hbs)를 가지고 컴파일 과정을 거친다. Caching Web Application 사용자가 서비스를 이용하기 위해 기다리는 시간을 최소화하기 위해 사용되는 것  캐싱(Caching)) 리소스 의 복사본을 놓고 서버보다는 가까운 위치에 놓고,클라이언트에…","fields":{"slug":"/Webpack/webpackconfig/"},"frontmatter":{"date":"October 22, 2021","title":"WebpackConfig","category":"Webpack","draft":false}}},{"node":{"excerpt":"1.웹팩의 기본구조: entry,output,loader,plugin,mode entry  entry 모듈의 의존관계를 이해하기위한 시작점 웹팩에서 웹자원을 변환하기위한 최초 진입니점 및 자바스크립트 경로 로 할수가 있다. output output 최상위  키에는 번들,애셋 및 으로 번들링하거나 로드하는 기타 항목을\n출력하는 방법과 위치를 지시하는 옵션이…","fields":{"slug":"/Webpack/웹팩 기본구조/"},"frontmatter":{"date":"October 21, 2021","title":"웹팩의 기본구조","category":"Webpack","draft":false}}},{"node":{"excerpt":"예제를 사용하면서 미니 프로젝트를 진행해보았습니다. axios 사용한 JS CRUD 이며, Authorization : API에 접속하기 위해서는 access token을 API 서버에 제출해서 인증을 해야 합니다. 글을 정리중입니다. 예제 보면서 공부해보았던 예제 입니다. 글을 쓰는이유 데모페이지 예제입니다.","fields":{"slug":"/project/book(crud)/"},"frontmatter":{"date":"October 19, 2021","title":"My Faborite Books","category":"project","draft":false}}},{"node":{"excerpt":"는 for 문을 대체할수 있는 고차 함수 이다. 은 프로토콜 객체이다. 실무에서 항상 많이 사용하는 예제이다.  배열 내에 특정요소가 포함되어 있는지 true 또는 false 를 반환한다. 로또의 최고순위 와 최저순위 프로그래머스 예제 이다\n를 사용하여 반복호출 호출 후에  true /false 비교를 했습니다. 는 자신을 호출한 배열의 모든요소를 순회 …","fields":{"slug":"/JavaScript/array.prototype/"},"frontmatter":{"date":"October 06, 2021","title":"Array type별 (Method정리)","category":"javascript","draft":false}}},{"node":{"excerpt":"Test 파일 작성규칙  폴더에 들어있는 test 파일 들은 작성한다. 폴더에 들어있는 test 파일 의 이름은 로 파일 을 작성한다. Vue Test Utils(VTU) Vue.js환경에서 단위 테스트를 하기 위한 공식 라이브러리 작성한 코드가 제대로 동작하는지 확인할때 사용가능하다. test.js 테스트 코드작성 에서는\nVuetify 가 localVu…","fields":{"slug":"/Vue/jest/"},"frontmatter":{"date":"October 01, 2021","title":"Jest Testing (정리개선중 )","category":"Vue","draft":false}}},{"node":{"excerpt":"전개연산자 (Spread Operator) 나열형 자료추출 및 연결할때 사용한다. 두 객체를 병합할때는 중복된 키 값들을 마지막 사용한객 체의 값으로 덮어 쓴다. 전개 연산자로 할당하면 2차원 형태가 되지 않는다. Es5 에서 배열의 내용은 합쳐 새로운 배열을 만들기 위해 concat 메소드 를 활용 Es6 에서 concat 메소드를 사용하지않고 간결하고…","fields":{"slug":"/JavaScript/전개연산자/"},"frontmatter":{"date":"September 30, 2021","title":"전개연산자","category":"javascript","draft":false}}},{"node":{"excerpt":"Vuex 란 어플리케이션의 모든 컴포넌트들에 대한 중앙 집중식 저장소의 역할 및 관리 Vuex 는 vue.js 애플리케이션 에대한 상태관리패턴 + 라이브러리 Vuex 구조 Vuex는     4가지 형태로 관리가 되며,\n관리 포인트 ‘store’ 라고 불리며, 이 4가지 는 단방향 데이터 흐름   state Vue 컴포넌트 에서 data 불릴수 있으며  화…","fields":{"slug":"/Vue/Vuex/"},"frontmatter":{"date":"September 29, 2021","title":"Vuex (state,getters,Mutations,Actions)","category":"Vue","draft":false}}},{"node":{"excerpt":"1.동기식 과 비동기식 처리 1-1. 동기식 처리 코드가 작성된 순서대로 실행됩니다. 1-2.비동기식 처리\n코드가 작성된 순서와는 상관없이 지정된 순서에 의해 실행됩니다.\n비동기 처리 로는   등이 있습니다. callback 비동기 처리를 하기위한 하나의 패턴으로 콜백함수를사용한다. 전통적인 콜백패턴은 콜백 헬로 인해 가독성이 나쁘고 비동기 처리중\n발생한…","fields":{"slug":"/Vue/Async-Await/"},"frontmatter":{"date":"September 28, 2021","title":"동기 와 비동기 처리의 이해","category":"Vue","draft":false}}},{"node":{"excerpt":"1.Vue.js의 제일 기초적인 개념적인 내용입니다. 라이플사이클은 크게    로 나눌수가있습니다. 1.Create 인스턴스가 작성된후 동기적으로 호출된다.\n부모,자식 관계 컴포넌트가 렌더링 될때 mounted보다 먼저 호출되며 부모,자식순으로 실행한다.\nCreate 단계에서는 호출되는 라이플 사이클 훅은 와  가 있다. 1-1.beforeCreate 인…","fields":{"slug":"/Vue/라이프사이클/"},"frontmatter":{"date":"September 28, 2021","title":"Vue.js 2.0 라이프사이클","category":"Vue","draft":false}}},{"node":{"excerpt":"변수 선언방식은 총 3 가지 가 있습니다. var,let,const 차이점 5가지 1.중복선언 가능여부  2.재활당 가능여부  3.변수 스코프 유효범위  4.변수 호이스팅 방식  5.전역객체 프로퍼티 여부 1.중복선언 1.var:중복선언이 가능하다 . 2.const,let : 중복선언 불가능 2.재할당 2-1.var,let : 값의 재할당이’가능’한 변수…","fields":{"slug":"/JavaScript/variable.basic/"},"frontmatter":{"date":"September 28, 2021","title":"JavaScript 문법공부 (Const,let,var)","category":"javascript","draft":false}}},{"node":{"excerpt":"Vue.Js 란 웹 페이지 화면을 개발하기 위한 프론트엔드 프레임워크 기반이다. 컴포넌트 기반으로 SPA(Single Page Application)를 구축할 수 있게 해주는 프레임워크이다. SPA 란 한개의 페이지 로 이루어진 어플리케이션을 명칭한다. index.html (메인페이지)를 한개페이지를 보여주기위한 예제입니다. 1-1.Hash Mode Vs…","fields":{"slug":"/Vue/vue.js-란/"},"frontmatter":{"date":"September 27, 2021","title":"Vue Basic(SPA 와  History mode 와 Hash mode)","category":"Vue","draft":false}}}]}},"pageContext":{}},"staticQueryHashes":["2486386679","3128451518"]}